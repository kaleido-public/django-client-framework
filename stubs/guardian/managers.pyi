from django.db import models
from guardian.core import ObjectPermissionChecker as ObjectPermissionChecker
from guardian.ctypes import get_content_type as get_content_type
from guardian.exceptions import ObjectNotPersisted as ObjectNotPersisted

class BaseObjectPermissionManager(models.Manager):
    @property
    def user_or_group_field(self): ...
    def is_generic(self): ...
    def assign_perm(self, perm, user_or_group, obj): ...
    def bulk_assign_perm(self, perm, user_or_group, queryset): ...
    def assign_perm_to_many(self, perm, users_or_groups, obj): ...
    def assign(self, perm, user_or_group, obj): ...
    def remove_perm(self, perm, user_or_group, obj): ...
    def bulk_remove_perm(self, perm, user_or_group, queryset): ...

class UserObjectPermissionManager(BaseObjectPermissionManager): ...
class GroupObjectPermissionManager(BaseObjectPermissionManager): ...
